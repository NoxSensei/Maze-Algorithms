(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8965],{3311:function(n,e,E){Promise.resolve().then(E.bind(E,59974))},35232:function(n,e,E){"use strict";E.d(e,{Z:function(){return r}});var _=E(57437),T=E(2265),t=E(56601),S=E(20920);function r(n){let{chart:e}=n,E=(0,T.useRef)(null);return(0,T.useEffect)(()=>{if(!(null!==E.current))return;t.N.initialize({startOnLoad:!0,theme:"neutral",logLevel:"error"});let n="chart-".concat(S.Z());t.N.render(n,e).then(n=>{E.current.innerHTML=n.svg})},[e]),(0,_.jsx)("div",{ref:E,style:{display:"flex",justifyContent:"center"}})}},59974:function(n,e,E){"use strict";E.r(e),E.d(e,{default:function(){return t}});var _=E(57437),T=E(35232);function t(){return(0,_.jsx)(T.Z,{chart:'flowchart TD\n    %% Definitions\n\n    START([Start])\n    SET_GRID_SIZE[/Define grid size/]\n    INIT_GRID[Initialize grid with all walls]\n    CHOOSE_START[Choose a random starting cell]\n\n    WALK_PHASE_START[Begin Walk Phase]\n\n    VISIT_CELL[Mark current cell as visited]\n    SHUFFLE_DIRS["Shuffle directions (N, S, E, W)"]\n    CHECK_NEIGHBOURS{Have all directions<br>been checked?}\n    NEXT_DIRECTION[Pick next direction]\n\n    OUT_OF_BOUNDS{Is target cell<br>outside grid?}\n    ALREADY_VISITED{Has target cell<br>been visited?}\n\n    CARVE_PASSAGE[Remove wall between current and target cell]\n    MOVE_TO_TARGET[Move to target cell]\n\n    HUNT_PHASE_START[Begin Hunt Phase]\n    FIND_NEW_START[Find unvisited cell<br>next to a visited one]\n    CONNECT_NEW_START[Carve passage<br>to visited neighbor]\n\n    ALL_CELLS_VISITED{Are all cells visited?}\n    RETURN_MAZE[/Return final maze/]\n\n    END([End])\n\n    %% Flow\n\n    START --> SET_GRID_SIZE\n    SET_GRID_SIZE --> INIT_GRID\n    INIT_GRID --> CHOOSE_START\n    CHOOSE_START --> WALK_PHASE_START\n\n    WALK_PHASE_START --> VISIT_CELL\n    VISIT_CELL --> SHUFFLE_DIRS\n    SHUFFLE_DIRS --> CHECK_NEIGHBOURS\n\n    CHECK_NEIGHBOURS -- No --> NEXT_DIRECTION\n    NEXT_DIRECTION --> OUT_OF_BOUNDS\n    OUT_OF_BOUNDS -- Yes --> CHECK_NEIGHBOURS\n    OUT_OF_BOUNDS -- No --> ALREADY_VISITED\n\n    ALREADY_VISITED -- Yes --> CHECK_NEIGHBOURS\n    ALREADY_VISITED -- No --> CARVE_PASSAGE\n    CARVE_PASSAGE --> MOVE_TO_TARGET\n    MOVE_TO_TARGET --> VISIT_CELL\n\n    CHECK_NEIGHBOURS -- Yes --> ALL_CELLS_VISITED\n\n    ALL_CELLS_VISITED -- No --> HUNT_PHASE_START\n    HUNT_PHASE_START --> FIND_NEW_START\n    FIND_NEW_START --> CONNECT_NEW_START\n    CONNECT_NEW_START --> WALK_PHASE_START\n\n    ALL_CELLS_VISITED -- Yes --> RETURN_MAZE\n    RETURN_MAZE --> END\n'})}}},function(n){n.O(0,[9238,4496,2971,7023,1744],function(){return n(n.s=3311)}),_N_E=n.O()}]);